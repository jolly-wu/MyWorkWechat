// https://github.com/zo0r/react-native-push-notification
import {
  PushNotificationIOS
  //引入推送通知组件，防止PushNotification找不到PushNotificationIOS的错误
} from 'react-native'
var PushNotification = require('react-native-push-notification')
export const NotifyRepeatType = {
  Day: 'day',
  Week: 'week',
  Hour: 'hour',
  Minute: 'minute',
  Time: 'time'
}
export class NotificationManager {
  // delayTime以毫秒为单位
  isInited = false
  constructor() {
    this.setup()
  }
  setup() {
    if (this.isInited) {
      return
    }
    PushNotification.configure({
      // (optional) Called when Token is generated (iOS and Android)
      onRegister: function(token) {
        console.log('TOKEN:', token)
      },

      // (required) Called when a remote or local notification is opened or received
      onNotification: function(notification) {
        console.log('NOTIFICATION:', notification)

        // process the notification

        // required on iOS only (see fetchCompletionHandler docs: https://facebook.github.io/react-native/docs/pushnotificationios.html)
        notification.finish(PushNotificationIOS.FetchResult.NoData)
      },

      // ANDROID ONLY: GCM or FCM Sender ID (product_number) (optional - not required for local notifications, but is need to receive remote push notifications)
      senderID: 'YOUR GCM (OR FCM) SENDER ID',

      // IOS ONLY (optional): default: all - Permissions to register.
      permissions: {
        alert: true,
        badge: true,
        sound: true
      },

      // Should the initial notification be popped automatically
      // default: true
      popInitialNotification: true,

      /**
      * (optional) default: true
      * - Specified if permissions (ios) and token (android and ios) will requested or not,
      * - if not, you must call PushNotificationsHandler.requestPermissions() later
      */
      requestPermissions: true
    })
    this.isInited = true
  }
  localNotificationSchedule(param, delayTime, notifyRepeatType) {
    PushNotification.localNotificationSchedule({
      /* Android Only Properties */
      id: '0', // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
      ticker: 'My Notification Ticker', // (optional)
      autoCancel: true, // (optional) default: true
      largeIcon: 'ic_launcher', // (optional) default: "ic_launcher"
      smallIcon: 'ic_notification', // (optional) default: "ic_notification" with fallback for "ic_launcher"
      bigText: param.title, // (optional) default: "message" prop
      subText: param.message, // (optional) default: none
      color: 'red', // (optional) default: system default
      vibrate: true, // (optional) default: true
      vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
      tag: 'some_tag', // (optional) add tag to message
      group: 'group', // (optional) add group to message
      ongoing: false, // (optional) set whether this is an "ongoing" notification
      priority: 'high', // (optional) set notification priority, default: high
      visibility: 'private', // (optional) set notification visibility, default: private
      importance: 'high', // (optional) set notification importance, default: high

      /* iOS only properties */
      alertAction: 'view', // (optional) default: view
      /* iOS and Android properties */
      title: param.title, // (optional)
      message: param.message, // (required)
      playSound: false, // (optional) default: true
      soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
      number: '1', // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
      repeatType: notifyRepeatType, // (optional) Repeating interval. Check 'Repeating Notifications' section for more info.
      actions: '["Yes", "No"]', // (Android only) See the doc for notification actions to know more
      date: new Date(Date.now() + delayTime) // in 60 secs
    })
  }
  cancelAllLocalNotifications() {
    PushNotification.cancelAllLocalNotifications()
  }
}
